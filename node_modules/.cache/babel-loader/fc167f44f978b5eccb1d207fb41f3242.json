{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE, DELETE_USERS_SUCCESS, DELETE_USERS_REQUEST, DELETE_USERS_FAILURE, UPDATE_USERS_REQUEST, UPDATE_USERS_SUCCESS, UPDATE_USERS_FAILURE, ADD_USER, GETALL_TODO_REQUEST, GETALL_TODO_SUCCESS, GETALL_TODO_FAILURE } from './actionType'; //********************** */GET ALL USER FROM JSON ***************************\n\nexport const fetchUser = () => {\n  return dispatch => {\n    dispatch(fetchUsersRequest()); // axios.get('https://jsonplaceholder.typicode.com/users')\n\n    axios({\n      url: 'http://localhost:3005/users',\n      method: 'GET'\n    }).then(response => {\n      const users = response.data;\n      dispatch(fetchUsersSuccess(users));\n    }).catch(error => {\n      dispatch(fetchUsersFailure(error.message));\n    });\n  };\n};\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST\n  };\n};\nexport const fetchUsersSuccess = users => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const fetchUsersFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error\n  };\n}; //********************* */Delete particular User **************************\n\nexport const deleteUser = userId => {\n  return dispatch => {\n    dispatch(deleteUsersRequest());\n    axios({\n      url: `http://localhost:3005/users/${userId}/`,\n      method: 'DELETE' // data: {\n      //   id: userId.id,\n      //   name: userId.name\n      // }\n\n    }).then(response => {\n      const users = response.data;\n      dispatch(deleteUsersSuccess(users));\n    }).catch(error => {\n      dispatch(deleteUsersFailure(error.message));\n    });\n  };\n};\nexport const deleteUsersRequest = users => {\n  return {\n    type: DELETE_USERS_REQUEST,\n    payload: users\n  };\n};\nexport const deleteUsersSuccess = users => {\n  return {\n    type: DELETE_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const deleteUsersFailure = error => {\n  return {\n    type: DELETE_USERS_FAILURE,\n    payload: error\n  };\n}; //******************** */ ADD USER   ****************************************\n\nexport const addUser = newUser => {\n  return dispatch => {\n    axios({\n      url: `http://localhost:3005/users/`,\n      method: 'POST' // data: {\n      //   id: userId.id,\n      //   name: userId.name\n      // }\n\n    });\n  };\n}; //******************** */ Update particular User *****************************\n\nexport const updateUser = users => {\n  return dispatch => {\n    dispatch(updateUsersRequest());\n    axios({\n      url: `http://localhost:3005/users/${users}/`,\n      method: 'PATCH' // data: {\n      //   id: userId.id,\n      //   name: userId.name\n      // }\n\n    }).then(response => {\n      const users = response.data;\n      dispatch(updateUsersSuccess(users));\n    }).catch(error => {\n      dispatch(updateUsersFailure(error.message));\n    });\n  };\n};\nexport const updateUsersRequest = users => {\n  return {\n    type: UPDATE_USERS_REQUEST,\n    payload: users\n  };\n};\nexport const updateUsersSuccess = users => {\n  return {\n    type: UPDATE_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const updateUsersFailure = error => {\n  return {\n    type: UPDATE_USERS_FAILURE,\n    payload: error\n  };\n}; //********************* */ Get all Todo from the json*************************\n\nexport const getAllTodo = () => {\n  return dispatch => {\n    dispatch(getAllTodoRequest());\n    axios({\n      url: `http://localhost:3005/todos`,\n      method: 'GET'\n    }).then(response => {\n      const todos = response.data;\n      console.log(todos);\n      dispatch(getAllTodoSuccess(todos));\n    }).catch(error => {\n      dispatch(getAllTodoFailure(error.message));\n    });\n  };\n};\nexport const getAllTodoRequest = () => {\n  return {\n    type: GETALL_TODO_REQUEST\n  };\n};\nexport const getAllTodoSuccess = todos => {\n  return {\n    type: GETALL_TODO_SUCCESS,\n    payload: todos\n  };\n};\nexport const getAllTodoFailure = error => {\n  return {\n    type: GETALL_TODO_FAILURE,\n    payload: error\n  };\n}; //********************* */ GET ALL ALBUM FROM JSON ***************************","map":{"version":3,"sources":["/home/rails/reduxmahima/reduxjsonserver/src/actions/index.js"],"names":["axios","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","DELETE_USERS_SUCCESS","DELETE_USERS_REQUEST","DELETE_USERS_FAILURE","UPDATE_USERS_REQUEST","UPDATE_USERS_SUCCESS","UPDATE_USERS_FAILURE","ADD_USER","GETALL_TODO_REQUEST","GETALL_TODO_SUCCESS","GETALL_TODO_FAILURE","fetchUser","dispatch","fetchUsersRequest","url","method","then","response","users","data","fetchUsersSuccess","catch","error","fetchUsersFailure","message","type","payload","deleteUser","userId","deleteUsersRequest","deleteUsersSuccess","deleteUsersFailure","addUser","newUser","updateUser","updateUsersRequest","updateUsersSuccess","updateUsersFailure","getAllTodo","getAllTodoRequest","todos","console","log","getAllTodoSuccess","getAllTodoFailure"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE,\n  DELETE_USERS_SUCCESS, DELETE_USERS_REQUEST, DELETE_USERS_FAILURE,\n  UPDATE_USERS_REQUEST, UPDATE_USERS_SUCCESS, UPDATE_USERS_FAILURE,ADD_USER,\n\n  GETALL_TODO_REQUEST, GETALL_TODO_SUCCESS, GETALL_TODO_FAILURE,\n} from './actionType'\n\n//********************** */GET ALL USER FROM JSON ***************************\nexport const fetchUser = () => {\n  return (dispatch) => {\n    dispatch(fetchUsersRequest())\n    // axios.get('https://jsonplaceholder.typicode.com/users')\n      axios({\n        url :'http://localhost:3005/users' ,\n        method :'GET',\n      })\n      .then(response => {\n        const users = response.data\n        dispatch(fetchUsersSuccess(users))\n      })\n      .catch(error => {\n        dispatch(fetchUsersFailure(error.message))\n      })\n  }\n}\n\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST\n  }\n}\n\nexport const fetchUsersSuccess = users => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users\n  }\n}\n\nexport const fetchUsersFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error\n  }\n}\n\n  //********************* */Delete particular User **************************\n  export const deleteUser = (userId) => {\n    return (dispatch) => {\n      dispatch(deleteUsersRequest())\n        axios({\n          url :`http://localhost:3005/users/${userId}/` ,\n          method :'DELETE',\n          // data: {\n          //   id: userId.id,\n          //   name: userId.name\n          // }\n        })\n        .then(response => {\n          const users = response.data\n          dispatch(deleteUsersSuccess(users))\n        })\n        .catch(error => {\n          dispatch(deleteUsersFailure(error.message))\n        })\n    }\n  }\n\nexport const deleteUsersRequest = (users) => {\n  return {\n    type : DELETE_USERS_REQUEST,\n    payload :users\n  }\n}\n\nexport const deleteUsersSuccess = users => {\n  return {\n    type: DELETE_USERS_SUCCESS,\n    payload: users\n  }\n}\n\nexport const deleteUsersFailure = error => {\n  return {\n    type: DELETE_USERS_FAILURE,\n    payload: error\n  }\n}\n\n//******************** */ ADD USER   ****************************************\n\nexport const addUser = (newUser) => {\n  return (dispatch) => {\n    axios({\n      url :`http://localhost:3005/users/`,\n      method :'POST',\n      // data: {\n      //   id: userId.id,\n      //   name: userId.name\n      // }\n    })\n   \n  }\n}\n\n//******************** */ Update particular User *****************************\n\nexport const updateUser =(users) => {\n  return (dispatch) => {\n    dispatch(updateUsersRequest())\n      axios({\n        url :`http://localhost:3005/users/${users}/` ,\n        method :'PATCH',\n        // data: {\n        //   id: userId.id,\n        //   name: userId.name\n        // }\n      })\n      .then(response => {\n        const users = response.data\n        dispatch(updateUsersSuccess(users))\n      })\n      .catch(error => {\n        dispatch(updateUsersFailure(error.message))\n      })\n  }\n}\n\nexport const updateUsersRequest = (users) => {\n  return {\n    type : UPDATE_USERS_REQUEST,\n    payload :users\n  }\n}\n\nexport const updateUsersSuccess = users => {\n  return {\n    type: UPDATE_USERS_SUCCESS,\n    payload: users\n  }\n}\n\nexport const updateUsersFailure = error => {\n  return {\n    type: UPDATE_USERS_FAILURE,\n    payload: error\n  }\n}\n//********************* */ Get all Todo from the json*************************\n\nexport const getAllTodo = () => {\n  return (dispatch) => {\n    dispatch(getAllTodoRequest())\n      axios({\n        url :`http://localhost:3005/todos` ,\n        method :'GET',\n      })\n      .then(response => {\n        const todos = response.data\n        console.log(todos)\n        dispatch(getAllTodoSuccess(todos))\n      })\n      .catch(error => {\n        dispatch(getAllTodoFailure(error.message))\n      })\n  }\n}\n\nexport const getAllTodoRequest = () => {\n  return {\n    type: GETALL_TODO_REQUEST\n  }\n}\n\nexport const getAllTodoSuccess = todos => {\n  return {\n    type: GETALL_TODO_SUCCESS,\n    payload: todos\n  }\n}\n\nexport const getAllTodoFailure = error => {\n  return {\n    type: GETALL_TODO_FAILURE,\n    payload: error\n  }\n}\n //********************* */ GET ALL ALBUM FROM JSON ***************************"]},"metadata":{},"sourceType":"module"}