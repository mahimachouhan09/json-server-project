{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE, DELETE_USERS_SUCCESS, DELETE_USERS_REQUEST, DELETE_USERS_FAILURE, GETALL_TODO_REQUEST, GETALL_TODO_SUCCESS, GETALL_TODO_FAILURE, GETALL_ALBUM_REQUEST, GETALL_ALBUM_SUCCESS, GETALL_ALBUM_FAILURE } from './actionType'; //********************** */GET ALL USER FROM JSON ***************************\n\nexport const fetchUser = () => {\n  return dispatch => {\n    dispatch(fetchUsersRequest()); // axios.get('https://jsonplaceholder.typicode.com/users')\n\n    axios({\n      url: 'http://localhost:3005/users',\n      method: 'GET'\n    }).then(response => {\n      const users = response.data;\n      dispatch(fetchUsersSuccess(users));\n    }).catch(error => {\n      dispatch(fetchUsersFailure(error.message));\n    });\n  };\n};\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST\n  };\n};\nexport const fetchUsersSuccess = users => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const fetchUsersFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error\n  };\n}; //********************* */Delete particular User **************************\n\nexport const deleteUser = userId => {\n  return dispatch => {\n    dispatch(deleteUsersRequest());\n    axios({\n      url: `http://localhost:3005/users/${userId}/`,\n      method: 'DELETE' // data: {\n      //   id: userId.id,\n      //   name: userId.name\n      // }\n\n    }).then(response => {\n      const users = response.data;\n      dispatch(deleteUsersSuccess(users));\n    }).catch(error => {\n      dispatch(deleteUsersFailure(error.message));\n    });\n  };\n};\nexport const deleteUsersRequest = users => {\n  return {\n    type: DELETE_USERS_REQUEST,\n    payload: users\n  };\n};\nexport const deleteUsersSuccess = users => {\n  return {\n    type: DELETE_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const deleteUsersFailure = error => {\n  return {\n    type: DELETE_USERS_FAILURE,\n    payload: error\n  };\n}; //******************** */ ADD USER   ****************************************\n// fetch('https://jsonplaceholder.typicode.com/posts', {\n//     method: 'POST',\n//     body: JSON.stringify({\n//       title: 'foo',\n//       body: 'bar',\n//       userId: 1\n//     }),\n//     headers: {\n//       \"Content-type\": \"application/json; charset=UTF-8\"\n//     }\n//   })\n//   .then(response => response.json())\n//   .then(json => console.log(json))\n//********************* */ ADD USER   ******************************* */\n\nexport const addUser = newUser => {\n  return dispatch => {\n    axios({\n      url: `http://localhost:3005/users/`,\n      method: 'POST',\n      data: JSON.stringify(newUser),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response); // .then(json => \n    //   console.log('adduser',json))\n    // .catch(error => {error})   \n  };\n}; //******************** */ Update particular User *****************************\n\nexport const updateUser = (newUser, id) => {\n  return dispatch => {\n    axios({\n      url: `http://localhost:3005/users/${id}`,\n      method: 'PUT',\n      data: JSON.stringify(newUser),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response);\n  };\n}; //******************** */ Update particular User *****************************\n// export const updateUser =(users) => {\n//   return (dispatch) => {\n//     dispatch(updateUsersRequest())\n//       axios({\n//         url :`http://localhost:3005/users/${users}/` ,\n//         method :'PUT',\n//         // data: {\n//         //   id: userId.id,\n//         //   name: userId.name\n//         // }\n//       })\n//       .then(response => {\n//         const users = response.data\n//         dispatch(updateUsersSuccess(users))\n//       })\n//       .catch(error => {\n//         dispatch(updateUsersFailure(error.message))\n//       })\n//   }\n// }\n// export const updateUsersRequest = (users) => {\n//   return {\n//     type : UPDATE_USERS_REQUEST,\n//     payload :users\n//   }\n// }\n// export const updateUsersSuccess = users => {\n//   return {\n//     type: UPDATE_USERS_SUCCESS,\n//     payload: users\n//   }\n// }\n// export const updateUsersFailure = error => {\n//   return {\n//     type: UPDATE_USERS_FAILURE,\n//     payload: error\n//   }\n// }\n//********************* */ Get all Todo from the json*************************\n\nexport const getAllTodo = () => {\n  return dispatch => {\n    dispatch(getAllTodoRequest());\n    axios({\n      url: `http://localhost:3005/todos`,\n      method: 'GET'\n    }).then(response => {\n      const todos = response.data;\n      dispatch(getAllTodoSuccess(todos));\n    }).catch(error => {\n      dispatch(getAllTodoFailure(error.message));\n    });\n  };\n};\nexport const getAllTodoRequest = () => {\n  return {\n    type: GETALL_TODO_REQUEST\n  };\n};\nexport const getAllTodoSuccess = todos => {\n  return {\n    type: GETALL_TODO_SUCCESS,\n    payload: todos\n  };\n};\nexport const getAllTodoFailure = error => {\n  return {\n    type: GETALL_TODO_FAILURE,\n    payload: error\n  };\n}; //********************* */ GET ALL ALBUM FROM JSON ***************************\n\nexport const getAlbum = () => {\n  return dispatch => {\n    dispatch(getAlbumRequest());\n    axios({\n      url: 'http://localhost:3005/albums',\n      method: 'GET'\n    }).then(response => {\n      const albums = response.data;\n      dispatch(getAlbumSuccess(albums));\n    }).catch(error => {\n      dispatch(getAlbumFailure(error.message));\n    });\n  };\n};\nexport const getAlbumRequest = () => {\n  return {\n    type: GETALL_ALBUM_REQUEST\n  };\n};\nexport const getAlbumSuccess = albums => {\n  return {\n    type: GETALL_ALBUM_SUCCESS,\n    payload: albums\n  };\n};\nexport const getAlbumFailure = error => {\n  return {\n    type: GETALL_ALBUM_FAILURE,\n    payload: error\n  };\n}; //********************* */ GET ALL POSTS FROM JSON ******************************\n//********************* */ GET ALL COMMENTS FROM JSON ***************************","map":{"version":3,"sources":["/home/rails/reduxmahima/reduxjsonserver/src/actions/index.js"],"names":["axios","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","DELETE_USERS_SUCCESS","DELETE_USERS_REQUEST","DELETE_USERS_FAILURE","GETALL_TODO_REQUEST","GETALL_TODO_SUCCESS","GETALL_TODO_FAILURE","GETALL_ALBUM_REQUEST","GETALL_ALBUM_SUCCESS","GETALL_ALBUM_FAILURE","fetchUser","dispatch","fetchUsersRequest","url","method","then","response","users","data","fetchUsersSuccess","catch","error","fetchUsersFailure","message","type","payload","deleteUser","userId","deleteUsersRequest","deleteUsersSuccess","deleteUsersFailure","addUser","newUser","JSON","stringify","headers","updateUser","id","getAllTodo","getAllTodoRequest","todos","getAllTodoSuccess","getAllTodoFailure","getAlbum","getAlbumRequest","albums","getAlbumSuccess","getAlbumFailure"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE,\n  DELETE_USERS_SUCCESS, DELETE_USERS_REQUEST, DELETE_USERS_FAILURE,\n  GETALL_TODO_REQUEST, GETALL_TODO_SUCCESS, GETALL_TODO_FAILURE,\n  GETALL_ALBUM_REQUEST, GETALL_ALBUM_SUCCESS, GETALL_ALBUM_FAILURE,\n} from './actionType'\n\n//********************** */GET ALL USER FROM JSON ***************************\nexport const fetchUser = () => {\n  return (dispatch) => {\n    dispatch(fetchUsersRequest())\n    // axios.get('https://jsonplaceholder.typicode.com/users')\n      axios({\n        url :'http://localhost:3005/users' ,\n        method :'GET',\n      })\n      .then(response => {\n        const users = response.data\n        dispatch(fetchUsersSuccess(users))\n      })\n      .catch(error => {\n        dispatch(fetchUsersFailure(error.message))\n      })\n  }\n}\n\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST\n  }\n}\n\nexport const fetchUsersSuccess = users => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users\n  }\n}\n\nexport const fetchUsersFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error\n  }\n}\n\n  //********************* */Delete particular User **************************\n  export const deleteUser = (userId) => {\n    return (dispatch) => {\n      dispatch(deleteUsersRequest())\n        axios({\n          url :`http://localhost:3005/users/${userId}/` ,\n          method :'DELETE',\n          // data: {\n          //   id: userId.id,\n          //   name: userId.name\n          // }\n        })\n        .then(response => {\n          const users = response.data\n          dispatch(deleteUsersSuccess(users))\n        })\n        .catch(error => {\n          dispatch(deleteUsersFailure(error.message))\n        })\n    }\n  }\n\nexport const deleteUsersRequest = (users) => {\n  return {\n    type : DELETE_USERS_REQUEST,\n    payload :users\n  }\n}\n\nexport const deleteUsersSuccess = users => {\n  return {\n    type: DELETE_USERS_SUCCESS,\n    payload: users\n  }\n}\n\nexport const deleteUsersFailure = error => {\n  return {\n    type: DELETE_USERS_FAILURE,\n    payload: error\n  }\n}\n\n//******************** */ ADD USER   ****************************************\n\n// fetch('https://jsonplaceholder.typicode.com/posts', {\n//     method: 'POST',\n//     body: JSON.stringify({\n//       title: 'foo',\n//       body: 'bar',\n//       userId: 1\n//     }),\n//     headers: {\n//       \"Content-type\": \"application/json; charset=UTF-8\"\n//     }\n//   })\n//   .then(response => response.json())\n//   .then(json => console.log(json))\n\n//********************* */ ADD USER   ******************************* */\n\nexport const addUser = (newUser) => {\n  return (dispatch) => {\n    axios({\n      url :`http://localhost:3005/users/`,\n      method :'POST',\n      data : JSON.stringify(newUser),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response)    \n    // .then(json => \n    //   console.log('adduser',json))\n    // .catch(error => {error})   \n  }\n}\n\n\n//******************** */ Update particular User *****************************\n\nexport const updateUser = (newUser,id) => {\n  return (dispatch) => {\n    axios({\n      url :`http://localhost:3005/users/${id}`,\n      method :'PUT',\n      data : JSON.stringify(newUser),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response)    \n  }\n}\n\n//******************** */ Update particular User *****************************\n\n// export const updateUser =(users) => {\n//   return (dispatch) => {\n//     dispatch(updateUsersRequest())\n//       axios({\n//         url :`http://localhost:3005/users/${users}/` ,\n//         method :'PUT',\n//         // data: {\n//         //   id: userId.id,\n//         //   name: userId.name\n//         // }\n//       })\n//       .then(response => {\n//         const users = response.data\n//         dispatch(updateUsersSuccess(users))\n//       })\n//       .catch(error => {\n//         dispatch(updateUsersFailure(error.message))\n//       })\n//   }\n// }\n\n// export const updateUsersRequest = (users) => {\n//   return {\n//     type : UPDATE_USERS_REQUEST,\n//     payload :users\n//   }\n// }\n\n// export const updateUsersSuccess = users => {\n//   return {\n//     type: UPDATE_USERS_SUCCESS,\n//     payload: users\n//   }\n// }\n\n// export const updateUsersFailure = error => {\n//   return {\n//     type: UPDATE_USERS_FAILURE,\n//     payload: error\n//   }\n// }\n//********************* */ Get all Todo from the json*************************\n\nexport const getAllTodo = () => {\n  return (dispatch) => {\n    dispatch(getAllTodoRequest())\n      axios({\n        url :`http://localhost:3005/todos` ,\n        method :'GET',\n      })\n      .then(response => {\n        const todos = response.data\n        dispatch(getAllTodoSuccess(todos))\n      })\n      .catch(error => {\n        dispatch(getAllTodoFailure(error.message))\n      })\n  }\n}\n\nexport const getAllTodoRequest = () => {\n  return {\n    type: GETALL_TODO_REQUEST\n  }\n}\n\nexport const getAllTodoSuccess = todos => {\n  return {\n    type: GETALL_TODO_SUCCESS,\n    payload: todos\n  }\n}\n\nexport const getAllTodoFailure = error => {\n  return {\n    type: GETALL_TODO_FAILURE,\n    payload: error\n  }\n}\n //********************* */ GET ALL ALBUM FROM JSON ***************************\n\n export const getAlbum = () => {\n  return (dispatch) => {\n    dispatch(getAlbumRequest())\n      axios({\n        url :'http://localhost:3005/albums' ,\n        method :'GET',\n      })\n      .then(response => {\n        const albums = response.data\n        dispatch(getAlbumSuccess(albums))\n      })\n      .catch(error => {\n        dispatch(getAlbumFailure(error.message))\n      })\n  }\n}\n\nexport const getAlbumRequest = () => {\n  return {\n    type: GETALL_ALBUM_REQUEST\n  }\n}\n\nexport const getAlbumSuccess = albums => {\n  return {\n    type: GETALL_ALBUM_SUCCESS,\n    payload: albums\n  }\n}\n\nexport const getAlbumFailure = error => {\n  return {\n    type: GETALL_ALBUM_FAILURE,\n    payload: error\n  }\n}\n\n//********************* */ GET ALL POSTS FROM JSON ******************************\n//********************* */ GET ALL COMMENTS FROM JSON ***************************"]},"metadata":{},"sourceType":"module"}