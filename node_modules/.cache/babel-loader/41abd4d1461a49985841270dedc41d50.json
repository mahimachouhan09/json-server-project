{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE, DELETE_USERS_SUCCESS, UPDATE_USER, GETALL_TODO_REQUEST, GETALL_TODO_SUCCESS, GETALL_TODO_FAILURE } from './actionType';\nexport const fetchUser = () => {\n  return dispatch => {\n    dispatch(fetchUsersRequest()); // axios.get('https://jsonplaceholder.typicode.com/users')\n\n    axios({\n      url: 'http://localhost:3005/users',\n      method: 'GET'\n    }).then(response => {\n      const users = response.data;\n      dispatch(fetchUsersSuccess(users));\n    }).catch(error => {\n      dispatch(fetchUsersFailure(error.message));\n    });\n  };\n};\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST\n  };\n};\nexport const fetchUsersSuccess = users => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const fetchUsersFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error\n  };\n}; //************** */Delete particular User *******************\n\nexport const deleteUser = id => {\n  return dispatch => {\n    dispatch(deleteUsersRequest());\n    axios({\n      url: 'http://localhost:3005/users/${user.id}/',\n      method: 'DELETE' // data: {\n      //   id: 1,\n      //   name: 'Williams'\n      // }\n\n    }).then(response => {\n      const users = response.data;\n      console.log(users);\n      dispatch(deleteUsersSuccess(users));\n    }).catch(error => {\n      dispatch(deleteUsersFailure(error.message));\n    });\n  };\n};\nexport const deleteUsersRequest = users => {\n  return {\n    type: DELETE_USER_REQUEST,\n    payload: users\n  };\n};\nexport const deleteUsersSuccess = users => {\n  return {\n    type: DELETE_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const deleteUsersFailure = error => {\n  return {\n    type: DELETE_USERS_FAILURE,\n    payload: error\n  };\n}; //*************** */ Update particular User *********************\n\nexport const updateUser = users => {\n  return {\n    type: UPDATE_USER,\n    payload: users\n  };\n}; //************** */ Get all Todo from the json********************\n\nexport const getAllTodo = () => {\n  return dispatch => {\n    dispatch(getAllTodoRequest());\n    axios({\n      url: 'http://localhost:3005/todos',\n      method: 'GET'\n    }).then(response => {\n      const todos = response.data;\n      dispatch(getAllTodoSuccess(todos));\n    }).catch(error => {\n      dispatch(getAllTodoFailure(error.message));\n    });\n  };\n};\nexport const getAllTodoRequest = () => {\n  return {\n    type: GETALL_TODO_REQUEST\n  };\n};\nexport const getAllTodoSuccess = todos => {\n  return {\n    type: GETALL_TODO_SUCCESS,\n    payload: todos\n  };\n};\nexport const getAllTodoFailure = error => {\n  return {\n    type: GETALL_TODO_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/home/rails/reduxmahima/reduxjsonserver/src/actions/index.js"],"names":["axios","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","DELETE_USERS_SUCCESS","UPDATE_USER","GETALL_TODO_REQUEST","GETALL_TODO_SUCCESS","GETALL_TODO_FAILURE","fetchUser","dispatch","fetchUsersRequest","url","method","then","response","users","data","fetchUsersSuccess","catch","error","fetchUsersFailure","message","type","payload","deleteUser","id","deleteUsersRequest","console","log","deleteUsersSuccess","deleteUsersFailure","DELETE_USER_REQUEST","DELETE_USERS_FAILURE","updateUser","getAllTodo","getAllTodoRequest","todos","getAllTodoSuccess","getAllTodoFailure"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE, DELETE_USERS_SUCCESS,\n   UPDATE_USER,\n  GETALL_TODO_REQUEST,GETALL_TODO_SUCCESS, GETALL_TODO_FAILURE,\n} from './actionType'\n\nexport const fetchUser = () => {\n  return (dispatch) => {\n    dispatch(fetchUsersRequest())\n    // axios.get('https://jsonplaceholder.typicode.com/users')\n      axios({\n        url :'http://localhost:3005/users' ,\n        method :'GET',\n      })\n      .then(response => {\n        const users = response.data\n        dispatch(fetchUsersSuccess(users))\n      })\n      .catch(error => {\n        dispatch(fetchUsersFailure(error.message))\n      })\n  }\n}\n\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST\n  }\n}\n\nexport const fetchUsersSuccess = users => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users\n  }\n}\n\nexport const fetchUsersFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error\n  }\n}\n\n  //************** */Delete particular User *******************\n  export const deleteUser = (id) => {\n    return (dispatch) => {\n      dispatch(deleteUsersRequest())\n        axios({\n          url :'http://localhost:3005/users/${user.id}/' ,\n          method :'DELETE',\n          // data: {\n          //   id: 1,\n          //   name: 'Williams'\n          // }\n        })\n        .then(response => {\n          const users = response.data\n          console.log(users)\n          dispatch(deleteUsersSuccess(users))\n        })\n        .catch(error => {\n          dispatch(deleteUsersFailure(error.message))\n        })\n    }\n  }\n\nexport const deleteUsersRequest = (users) => {\n  return {\n    type : DELETE_USER_REQUEST,\n    payload :users\n  }\n}\n\nexport const deleteUsersSuccess = users => {\n  return {\n    type: DELETE_USERS_SUCCESS,\n    payload: users\n  }\n}\n\nexport const deleteUsersFailure = error => {\n  return {\n    type: DELETE_USERS_FAILURE,\n    payload: error\n  }\n}\n//*************** */ Update particular User *********************\n\nexport const updateUser =(users) => {\n  return {\n    type: UPDATE_USER,\n    payload :users,\n  }\n}\n\n//************** */ Get all Todo from the json********************\n\nexport const getAllTodo = () => {\n  return (dispatch) => {\n    dispatch(getAllTodoRequest())\n      axios({\n        url :'http://localhost:3005/todos' ,\n        method :'GET',\n      })\n      .then(response => {\n        const todos = response.data\n        dispatch(getAllTodoSuccess(todos))\n      })\n      .catch(error => {\n        dispatch(getAllTodoFailure(error.message))\n      })\n  }\n}\n\nexport const getAllTodoRequest = () => {\n  return {\n    type: GETALL_TODO_REQUEST\n  }\n}\n\nexport const getAllTodoSuccess = todos => {\n  return {\n    type: GETALL_TODO_SUCCESS,\n    payload: todos\n  }\n}\n\nexport const getAllTodoFailure = error => {\n  return {\n    type: GETALL_TODO_FAILURE,\n    payload: error\n  }\n}\n"]},"metadata":{},"sourceType":"module"}